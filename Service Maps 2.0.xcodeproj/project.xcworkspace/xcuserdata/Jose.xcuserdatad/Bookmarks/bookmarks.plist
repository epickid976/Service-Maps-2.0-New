<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>top-level-items</key>
	<array>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>4</string>
					<key>EndingLineNumber</key>
					<string>43</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>43</string>
					<key>Timestamp</key>
					<string>742054100.9383709</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>Service Maps 2.0/Managers/AuthorizationLevelManager.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    </string>
				<key>leading</key>
				<string>    }
    @MainActor
</string>
				<key>trailing</key>
				<string>func getAccessLevel&lt;T&gt;(model: T) -&gt; AccessLevel?  where T: Object{
        if existsAdminCredentials() {
            return .Admin
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>8</string>
					<key>EndingLineNumber</key>
					<string>60</string>
					<key>StartingColumnNumber</key>
					<string>4</string>
					<key>StartingLineNumber</key>
					<string>60</string>
					<key>Timestamp</key>
					<string>742054109.872686</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>Service Maps 2.0/Managers/AuthorizationLevelManager.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>func</string>
				<key>leading</key>
				<string>    
    @MainActor
    </string>
				<key>trailing</key>
				<string> setAuthorizationTokenFor&lt;T&gt;(model: T) async  where T: Object {
        if let token =  findToken(model: model) {
            authorizationProvider.token = token.id
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>8</string>
					<key>EndingLineNumber</key>
					<string>75</string>
					<key>StartingColumnNumber</key>
					<string>4</string>
					<key>StartingLineNumber</key>
					<string>75</string>
					<key>Timestamp</key>
					<string>742054398.1718</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>Service Maps 2.0/Managers/AuthorizationLevelManager.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>func</string>
				<key>leading</key>
				<string>    }
    @MainActor
    </string>
				<key>trailing</key>
				<string> findToken&lt;T&gt;(model: T) -&gt; TokenObject? where T: Object {
      switch model {
      case let territory as TerritoryObject:
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
	</array>
</dict>
</plist>
